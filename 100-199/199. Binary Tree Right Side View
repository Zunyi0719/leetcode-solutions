// solution 1: A straight forward solution, apply two queues to iterate the tree by level
// in each level while reaching the end, store that node's val into list
// return the list after all nodes are iterated

// solution 1
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList();
        if(root == null) return res;
        Queue<TreeNode> q1 = new LinkedList();
        Queue<TreeNode> q2 = new LinkedList();
        
        q1.add(root);
        
        while(!q1.isEmpty()){
            TreeNode tmp = q1.remove();
            if(tmp.left!=null) q2.add(tmp.left);
            if(tmp.right!=null) q2.add(tmp.right);
            if(q1.isEmpty()){
                res.add(tmp.val);
                q1 = q2;
                q2 = new LinkedList();
            }
        }
     
        return res;
    }
}
